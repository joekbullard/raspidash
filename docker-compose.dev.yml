services:
  web:
    build: 
      context: ./app
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000
    
    env_file:
      - ./.env.dev
    
    volumes:
      - ./app:/app:cached  # Mount source code but avoid unnecessary writes
      - /app/__pycache__  # Prevent __pycache__ pollution
      - /app/static  # Allow collected static files to persist
      - /app/media  # Ensure media files persist
      - uv-cache:/root/.cache/uv  # Cache package installs
    
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app
          ignore:
            - .venv/
            - __pycache__/
        - action: rebuild
          path: ./app/uv.lock  # Rebuild when dependencies change
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - dev_db
  dev_db:
    image: postgres
    restart: always
    shm_size: 128mb
    env_file:
      - .env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  uv-cache:

