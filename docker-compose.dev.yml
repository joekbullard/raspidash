services:
  web:
    build: 
      context: ./app
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000
    
    env_file:
      - ./.env.dev
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - dev_db
  dev_db:
    image: postgres
    restart: always
    shm_size: 128mb
    env_file:
      - .env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
